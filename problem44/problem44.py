"""
Problem 44

Pentagonal numbers are generated by the formula, P_n = n(3n-1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 - 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |P_k - P_j| is minimised; what is the value of D?
"""
import math
# sum and diff are pentagonal_numbers

def penta(n):
    return n*(3*n-1)//2

def is_pentagonal(num):
    # num = n*(3*n-1)//2
    # 0 = 3n^2 - n - num*2
    ## quadratic formula
    a,b,c = 3,-1,-num*2

    term1 =math.sqrt(b*b - 4*a*c)
    if term1 != int(term1): return False

    x1 = (-b+term1)/ (2*a)
    # x2 = (-b-term1)/2     # will always be negative,
    if num == penta(x1) and x1 == int(x1): return True
    return False

d_found = False
i = 2
penta_numbers = [1]
while not d_found:
    if i%1000==0: print(f' step: {i} \n checking d={penta(i)}')

    new_num = penta(i)
    ## check new num for any differnces that are penta
    for a in penta_numbers[::-1]:
        if is_pentagonal(new_num-a) and is_pentagonal(new_num+a):
            print(new_num-a, 'is answer!!')
            d_found=True
    penta_numbers.append(new_num)
    i+=1

# start with diff
# find any two with that diff





